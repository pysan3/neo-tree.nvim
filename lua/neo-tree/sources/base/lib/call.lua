---@meta
---@diagnostic disable: duplicate-set-field

error("Cannot require a meta file")

-- WARN: Do not edit this file unless you know what you are doing <pysan3>
-- These functions are used to apply valid type checks in `<source>/commands.lua`.
--
-- This should become easier when https://github.com/LuaLS/lua-language-server/pull/2484 is merged.

---@class NeotreeCommonCommands
local M = {}

---@generic A
---@param cb function|nil
---@param a A
---@return A
M.call = function(cb, a) end

---@generic A, B
---@param cb function|nil
---@param a A
---@param b B
---@return A, B
M.call = function(cb, a, b) end

---@generic A, B, C
---@param cb function|nil
---@param a A
---@param b B
---@param c C
---@return A, B, C
M.call = function(cb, a, b, c) end

---@generic A, B, C, D
---@param cb function|nil
---@param a A
---@param b B
---@param c C
---@param d D
---@return A, B, C, D
M.call = function(cb, a, b, c, d) end

---@generic A, B, C, D, E
---@param cb function|nil
---@param a A
---@param b B
---@param c C
---@param d D
---@param e E
---@return A, B, C, D, E
M.call = function(cb, a, b, c, d, e) end

---@generic A, B, C, D, E, F
---@param cb function|nil
---@param a A
---@param b B
---@param c C
---@param d D
---@param e E
---@param f F
---@return A, B, C, D, E, F
M.call = function(cb, a, b, c, d, e, f) end

---@generic A, B, C, D, E, F, G
---@param cb function|nil
---@param a A
---@param b B
---@param c C
---@param d D
---@param e E
---@param f F
---@param g G
---@return A, B, C, D, E, F, G
M.call = function(cb, a, b, c, d, e, f, g) end

---@generic A, B, C, D, E, F, G, H
---@param cb function|nil
---@param a A
---@param b B
---@param c C
---@param d D
---@param e E
---@param f F
---@param g G
---@param h H
---@return A, B, C, D, E, F, G, H
M.call = function(cb, a, b, c, d, e, f, g, h) end

---@generic A, B, C, D, E, F, G, H, I
---@param cb function|nil
---@param a A
---@param b B
---@param c C
---@param d D
---@param e E
---@param f F
---@param g G
---@param h H
---@param i I
---@return A, B, C, D, E, F, G, H, I
M.call = function(cb, a, b, c, d, e, f, g, h, i) end

return M
